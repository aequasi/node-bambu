{
  "root": true,
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/strict",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:unicorn/recommended",
    "plugin:prettier/recommended"
  ],
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx", "import", "unused-imports", "prettier"],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts"]
      }
    }
  },
  "rules": {
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          // Index signature
          // No scope for index signature.

          // Fields
          "static-field", // = ["public-static-field", "protected-static-field", "private-static-field"]
          "static-method", // = ["public-static-method", "protected-static-method", "private-static-method"]

          // Getters & Setters
          ["static-get", "static-set"], // = ["public-static-get", "protected-static-get", "private-static-get", "public-static-set", "protected-static-set", "private-static-set"]

          ["instance-get", "instance-set"], // = ["public-instance-get", "protected-instance-get", "private-instance-get", "public-instance-set", "protected-instance-set", "private-instance-set"]

          ["abstract-get", "abstract-set"], // = ["public-abstract-get", "protected-abstract-get", "public-abstract-set", "protected-abstract-set"]

          "instance-field", // = ["public-instance-field", "protected-instance-field", "private-instance-field"]
          "abstract-field", // = ["public-abstract-field", "protected-abstract-field"]

          // Constructors
          "constructor", // = ["public-constructor", "protected-constructor", "private-constructor"]
          // Static initialization
          "static-initialization",

          // Methods
          "instance-method", // = ["public-instance-method", "protected-instance-method", "private-instance-method"]
          "abstract-method" // = ["public-abstract-method", "protected-abstract-method"]
        ]
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": ["error"],
    "@typescript-eslint/explicit-function-return-type": ["error"],
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-unused-expressions": "error",
    "import/export": "off",
    "semi": ["error", "always"],
    "comma-dangle": [2, "always-multiline"],
    "import/named": "off",
    "import/no-default-export": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "ts": "never"
      }
    ],
    "import/no-unresolved": "off",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", ["internal", "parent", "sibling", "index"]],
        "pathGroups": [
          {
            "pattern": "@autofidev/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "~*/**",
            "group": "internal",
            "position": "before"
          }
        ],
        /* This will make the @node-bambu packages sort right after the other 'external' imports. */
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "import/prefer-default-export": 0,
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "lodash",
            "importNames": ["default"],
            "message": "\n Import the specific methods inside of curly brackets instead."
          }
        ]
      }
    ],
    "object-curly-spacing": ["error", "always"],
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "return",
          "continue",
          "break",
          "default",
          "case",
          "class",
          "function",
          "if",
          "for",
          "do",
          "switch",
          "while",
          "try",
          "block-like",
          "block"
        ]
      },
      { "blankLine": "always", "prev": ["if", "for", "do", "switch", "while"], "next": "*" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "always", "prev": "directive", "next": "*" },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "any", "prev": ["case", "default"], "next": ["case", "default"] },
      { "blankLine": "any", "prev": "directive", "next": "directive" }
    ],
    "unicorn/filename-case": [
      "error",
      { "cases": { "pascalCase": true, "camelCase": true }, "ignore": ["/getAMSesFromCommand.ts/"] }
    ],
    "@typescript-eslint/no-empty-function": ["error", { "allow": ["arrowFunctions"] }],
    "unicorn/number-literal-case": "off",
    "unicorn/no-useless-undefined": "off",
    "unicorn/prefer-module": "off"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.js"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:import/typescript",
        "plugin:typescript-sort-keys/recommended"
      ],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "disallowTypeAnnotations": true
          }
        ],
        "@typescript-eslint/default-param-last": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "import/no-default-export": "error"
      }
    },
    {
      "files": ["*.js"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
